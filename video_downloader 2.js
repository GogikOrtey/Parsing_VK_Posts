// const puppeteer = require('puppeteer');
import puppeteer from 'puppeteer-core';
import fs from 'fs';
import path from 'path';
import fsp from 'fs/promises';
import readline from 'readline';



console.log(" ")
console.log("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî")
console.log("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî")
console.log("v0.2")
console.log("")
console.log("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–∞–º!")
console.log("")


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
const delay = ms => new Promise(res => setTimeout(res, ms));
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: 
// await delay(500);



// –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ "–ó–∞–≥—Ä—É–∑–∫–∏"
const downloadsFolder = 'D:\\–ó–∞–≥—Ä—É–∑–∫–∏';



let data = [];

data = await processFile(data);

await MainProcess();


// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤ –º–∞—Å—Å–∏–≤ data –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∏–∑ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
async function processFile(data) {
  let fileStream = fs.createReadStream('video/input.txt');
  let rl = readline.createInterface({ input: fileStream });

  let temp = [];

  for await (let line of rl) {
    if (line.startsWith('[')) {
      if (temp.length > 0) {
        data.push(temp);
        temp = [];
      }
      temp.push(line);
    } else if (line.startsWith('https://')) {
      temp.push(line);
    } else if (line.trim() !== '') {
      temp.push(line);
    }
  }

  if (temp.length > 0) {
    data.push(temp);
  }

  if (data.length === 0) {
    console.log('üü† –§–∞–π–ª–∏–∫ –ø—É—Å—Ç, –∏ –≤ –Ω—ë–º –Ω–µ—Ç —Å—Å—ã–ª–æ–∫');
  } else {
    console.log('üü¢ –§–∞–π–ª–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω');
    // console.log(data);
  }

  return data;
}


// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–∞–º, –∏–∑ –º–∞—Å—Å–∏–≤–∞ data
async function MainProcess() {
  // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–∞—Å—Å–∏–≤
  data.shift();

  // –¶–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
  for (let i = 0; i < data.length; i++) {
    let item = data[i];
    let description = item[0].substring(1, item[0].indexOf(']'));
    console.log(`–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${description}`);

    let rest = item[0].substring(item[0].indexOf(']') + 1).trim();
    if (rest.length > 0) {
      console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: ${rest}`);
    }

    for (let j = 1; j < item.length; j++) {
      console.log(`–°—Å—ã–ª–∫–∞ ${j}: ${item[j]}`);
    }

    console.log(`–û–±—Ä–∞–±–æ—Ç–∫–∞ ${i + 1} —ç–ª–µ–º–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
    console.log()
  }


  // –¶–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –≤–∏–¥–µ–æ
  for (let i = 0; i < data.length; i++) {

    let item = data[i];

    let description = item[0].substring(1, item[0].indexOf(']'));
    console.log(`–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${description}`);

    let rest = item[0].substring(item[0].indexOf(']') + 1).trim();
    if (rest.length > 0) {
      console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: ${rest}`);
    }

    let allDescr = item[0];

    for (let j = 1; j < item.length; j++) {
      // console.log(`–°—Å—ã–ª–∫–∞ ${j}: ${item[j]}`);

      await DownloadVideoFromURL(item[j], allDescr)
    }

    console.log(`–û–±—Ä–∞–±–æ—Ç–∫–∞ ${i + 1} —ç–ª–µ–º–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
    console.log()
  }
}












 



















// DownloadVideoFromURL('https://vk.com/video-72495085_456242529')



// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä, –∏ –¥–∞–ª—å—à–µ –ø–µ—Ä–µ–¥–∞—ë—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function DownloadVideoFromURL(inputURLVideo, allDescr) {
  let localMainCounter = 0; // –°—á—ë—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–æ–µ —É –Ω–∞—Å —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–æ–¥–µ

  try {
    // console.log("inputURLVideo = " + inputURLVideo);

    localMainCounter = 0; console.log(localMainCounter + ': –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä');

    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä:
    const browser = await puppeteer.launch({
      // –ü—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É –±—Ä–∞—É–∑–µ—Ä–∞ Edge
      executablePath: 'C:/Program Files (x86)/Microsoft/Edge/Application/msedge.exe',
      headless: false // –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –≤ —Ä–µ–∂–∏–º–µ —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
    });

    localMainCounter = 1; console.log(localMainCounter + ': –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç');

    const page = await browser.newPage();

    // –û—Ç–∫—Ä—ã–≤–∞—é –Ω—É–∂–Ω—É—é –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É
    // page.goto('https://www.downloadvideosfrom.com/ru/VK.php#GoogleBetweenAd', { waitUntil: 'load' }); 

    // const result = await Promise.race([pagePromise, timeoutPromise]);
    
    // if (result === pagePromise) {
    //   console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    //   // –í–∞—à –∫–æ–¥ –∑–¥–µ—Å—å...
    // } else {
    //   console.log('–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ');
    //   // –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    // }

    const pagePromise = page.goto('https://www.downloadvideosfrom.com/ru/VK.php#GoogleBetweenAd', { waitUntil: 'load' });
    const timeoutPromise = new Promise((resolve) => setTimeout(resolve, 5000));

    // const result = 
    await Promise.race([pagePromise, timeoutPromise]);

    // if (result === pagePromise) {
    //   console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    //   // –í–∞—à –∫–æ–¥ –∑–¥–µ—Å—å...
    // } else {
    //   console.log('–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ');
    //   // –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    // }

    localMainCounter = 2; console.log(localMainCounter + ': –ñ–¥—ë–º 7 —Å–µ–∫—É–Ω–¥, –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è');
    
    await delay(7000);

    localMainCounter = 3; 
    console.log(localMainCounter + ': –ü–µ—Ä–µ–¥–∞—ë–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');

    // –ü–µ—Ä–µ–¥–∞—ë–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    await downloadVideoFromOpenedWebSite(page, inputURLVideo);

    localMainCounter = 7; 
    console.log(localMainCounter + ': –ñ–¥—ë–º, –ø–æ–∫–∞ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è');
    console.log()

    let filePatch = await waitForDownloadVideo();

    localMainCounter = 8; console.log(localMainCounter + ': –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω');

    console.log("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî")

    localMainCounter = 9; console.log(localMainCounter + ': –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä');

    // await browser.close();
  } catch (error) {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –û—à–∏–±–∫–∞:', error);
  }
}



// –°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ, —É–∂–µ —Å –æ—Ç–∫—Ä—ã—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function downloadVideoFromOpenedWebSite(page, inputURLVideo) {
  console.log('–°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ —Å –∞–¥—Ä–µ—Å–æ–º: ' + inputURLVideo);
  await delay(500);

  let localMainCounter = 4;
  console.log(localMainCounter + ': –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å id="url"');

  page.evaluate((url) => {
    document.querySelector('#url').value = url;
  }, inputURLVideo);

  await delay(500);
  localMainCounter = 5;
  console.log(localMainCounter + ': –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å id="DownloadMP4HD"');
  // –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å id="DownloadMP4HD"
  page.click('#DownloadMP4HD');

  await delay(500);
  localMainCounter = 6; console.log(localMainCounter + ': –ú—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∏ –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ');
}









// waitForDownloadVideo();






// –ñ–¥—ë—Ç, –ø–æ–∫–∞ –≤ –ø–∞–ø–∫–µ –ó–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
async function waitForDownloadVideo() {
  let finalPatch = ""

  while (finalPatch == "") {
    await delay(1000); // –ñ–¥—ë–º 1 —Å–µ–∫—É–Ω–¥—É

    const files = await fsp.readdir(downloadsFolder);
    const mp4Files = files.filter(file => path.extname(file) === '.mp4');

    if (mp4Files.length === 1) {
      let finalPath = path.join(downloadsFolder, mp4Files[0])

      console.log();      
      console.log('–§–∞–π–ª –∑–∞–≥—Ä—É–∑–∏–ª—Å—è:');      
      console.log(finalPath);

      return finalPath;

    } else if (mp4Files.length > 1) {
      console.log('–ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ .mp4, —É–¥–∞–ª–∏—Ç–µ –≤—Å–µ –ª–∏—à–Ω–∏–µ —Ñ–∞–π–ª—ã.');

    } else {
      console.log("–§–∞–π–ª –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, –∂–¥—ë–º...");
    }
  }
}



































