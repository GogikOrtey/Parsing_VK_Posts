import fetch from 'node-fetch';
import fs from 'fs';
import https from 'https';
import moment from 'moment';
import crypto from 'crypto';
import sharp from 'sharp';
import axios from 'axios';

// –≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–∫–∞—á–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç: –ö–∞—Ä—Ç–∏–Ω–∫–∏, –ü–æ–¥–ø–∏—Å–∏ –∫ –ø–æ—Å—Ç—É –∏ GIF
// –¢–∞–∫–∂–µ, –æ–Ω–∞ –ø–æ–ª—É—á–∏—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –≤–∏–¥–µ–æ –∏–∑ –ø–æ—Å—Ç–æ–≤, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –∏—Ö –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª, —Å –¥–∞—Ç–∞–º–∏ –ø–æ—Å—Ç–æ–≤


// –ö–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∫ API
const accessToken = '37382a8c37382a8c37382a8ca9342001943373837382a8c5108cd6d715313038c2969d4';

console.log(" ")
console.log("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî")
console.log("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî")
console.log("v0.3")
console.log("")
console.log("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ –í–ö!")
console.log("")


if(accessToken == '') {
    console.log("–í –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ —É–∫–∞–∑–∞–Ω –ö–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∫ API. –ï–≥–æ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π accessToken, –≤ ~14 —Å—Ç—Ä–æ—á–∫–µ –∫–æ–¥–∞")
    console.log("–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ö–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∫ API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ - –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ —É–∑–Ω–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –≠—Ç–æ –Ω–µ –∑–∞–π–º—ë—Ç –±–æ–ª—å—à–µ 2—Ö –º–∏–Ω—É—Ç")
    console.log('');
    console.log('üî¥ Error! –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π');
    process.exit();
}


// ID –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
const groupId = '224924750';

let goonGroupName = '';


// –ü–æ–ª—É—á–∞—é –∏ –≤—ã–≤–æ–∂—É –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:
await fetch(`https://api.vk.com/method/groups.getById?group_id=${groupId}&access_token=${accessToken}&v=5.130`)
    .then(response => response.json())
    .then(data => {
        let groupName = data.response[0].name;
        goonGroupName = sanitizeFilename(groupName);
        console.log("–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã: " + goonGroupName);
        console.log("");
    })


// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤—Å–µ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function sanitizeFilename(filename) {
    // –°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    const invalidChars = /[~!@#$%^&*()+=\[\]{};':"\\|<>\/?]+/g;
    filename = filename.replace(/\n/g, " ");

    // // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–µ–ª–æ–≤
    // filename = filename.replace(/\s/g, '-');

    // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    return filename.replace(invalidChars, '');
}

// –¢–∞-–∂–µ —Ñ—É–Ω–∫—Ü–∏—è, —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
function sanitizeFilename2(filename) {
    // –ë—ã—Å—Ç—Ä—ã–µ –∑–∞–º–µ–Ω—ã –Ω–µ–ª–∏–∫–≤–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤. –ß—Ç–æ –±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –∏ –ø–æ–ø–∞—Å—Ç—å –≤ —Ä–∞–º–∫–∏
    filename = filename.replace(/:/g, "‚Åö");
    filename = filename.replace(/\?/g, "‚ÄΩ");
    filename = filename.replace(/\n/g, " ");

    // –°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    const invalidChars = /[~!@#$%^&*()+=\[\]{};':"\\|<>\/?]+/g;

    // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    return filename.replace(invalidChars, '');
}




// –ü—É—Ç—å –ø–æ —É–º–ª–æ—á–∞–Ω–∏—é, –≥–¥–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–∞–ø–∫–∏ Session
// (–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞)

let mainPath = 'main/';



// –°–æ–∑–¥–∞—é –ø–∞–ø–∫—É Session [–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è] - –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ª—é–±—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
// –í –Ω–µ–π —Å–æ–∑–¥–∞—é –ø–∞–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥—Ä—É–ø–ø—ã

let currDateTime = moment().format('YYYY.MM.DD HH‚Åömm‚Åöss');
let nameFlMainSession = mainPath + 'Session [' + currDateTime + ']';
 
// –ü—Ä–æ–≤–µ—Ä—è—é, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —Ç–∞–∫–∞—è –ø–∞–ø–∫–∞
if (fs.existsSync(nameFlMainSession)) {
    // –ï—Å–ª–∏ –¥–∞ - —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–æ–≥—Ä–∞–º–º—É
    console.log('');
    console.log('üî¥ Error! –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π:');
    console.log('–ü–∞–ø–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å–µ—Å—Å–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
    console.log('–ü–æ–¥–æ–∂–¥–∏—Ç–µ 1 –º–∏–Ω—É—Ç—É, –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å–Ω–æ–≤–∞');
    process.exit();
}

// –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
await fs.mkdirSync(nameFlMainSession, { recursive: true });
console.log('–ü–∞–ø–∫–∞ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');

let floberGroupName = nameFlMainSession + '/' + goonGroupName; // –ü–∞–ø–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥—Ä—É–ø–ø—ã

// –°–æ–∑–¥–∞—ë–º –≤ –Ω–µ–π –ø–∞–ø–∫—É —Å –∏–º–µ–Ω–µ–º –Ω–∞–∑–∞–≤–Ω–∏—è –≥—Ä—É–ø–ø—ã, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
await fs.mkdirSync(floberGroupName, { recursive: true });




// –°–æ–∑–¥–∞—é .txt —Ñ–∞–π–ª, –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–∏–¥–µ–æ
// (–¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Ö –ø–æ–∑–∂–µ)

// –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞:
let data = '–í—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ –ø–æ—Å—Ç–æ–≤\n\n–ì—Ä—É–ø–ø–∞: ' + goonGroupName + '\n\n'; 
// –ü—É—Ç—å –∫ —ç—Ç–æ–º—É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É:
let txtFile_allVideoLinks = nameFlMainSession + '/–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ –≥—Ä—É–ø–ø—ã ' + goonGroupName + '.txt';

await fs.writeFileSync(txtFile_allVideoLinks, data);


// // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –≤ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª:
// let dataAdd = "123"

// await fs.appendFileSync(txtFile_allVideoLinks, dataAdd, (err) => {
//     if (err) throw err;
// });









let bool_isHttpGerResponse = false; // –ù—É–∂–µ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ http –æ—Ç–≤–µ—Ç–∞
let bool_isinfoShow = false;        // –ï—Å–ª–∏ = true, —Ç–æ –≤ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
let bool_isWeGoingToPoll = false;   // –ú—ã –¥–æ—à–ª–∏ –¥–æ –æ–ø—Ä–æ—Å–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ—Å—Ç–æ–≤? –ï—Å–ª–∏ –¥–∞, —Ç–æ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –ø–æ—Å—Ç—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç

let counterWaitRequest = 0;         // –°–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –º—ã –∂–¥—ë–º –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
let lastEventTime = 0;              // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏









// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã –∏–∑ –≥—Ä—É–ø–ø—ã
// –ó–¥–µ—Å—å, "count=" - —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä–Ω—ë—Ç –Ω–∞–º —Å–µ—Ä–≤–µ—Ä max=100
// "offset=_" - —ç—Ç–æ —Å–¥–≤–∏–≥, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–º —Å–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ—Å—Ç—ã

    /*////////////////////////////////////
    //          Count –∏ Offset          //
    ////////////////////////////////////*/

let startCount = 10
let startOffset = 40

let bool_isShowCountOfPosts = false; // –ú—ã —É–∂–µ –≤—ã–≤–µ–ª–∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤?

console.log(`–ú—ã –Ω–∞—á–∏–Ω–∞–µ–º —Å ${startOffset} –ø–æ—Å—Ç–∞ —Å–≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ${startCount} –ø–æ—Å—Ç–æ–≤`)







                /*/////////////////////////////////////////////////////////////////
                //                                                               //
                //                        –ì–ª–∞–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å                         //
                //                                                               //
                //////////////////////////////////////////////////////////////// */

async function MainRequest(count, offset) {

    console.log("")
    console.log("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –ü–æ—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî")
    console.log("offset = " + offset + ", count = " + count)
    console.log("")

    if (lastEventTime == 0) {
        lastEventTime = Date.now(); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
    } else {
        let currentEventTime = Date.now(); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
        let timeDifference = (currentEventTime - lastEventTime) / 1000; // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        console.log(`–° –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—à–ª–æ ${timeDifference.toFixed(2)} —Å–µ–∫—É–Ω–¥`);

        lastEventTime = currentEventTime; // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–±—ã—Ç–∏—è
    }






await fetch(`https://api.vk.com/method/wall.get?
owner_id=-${groupId}&
count=${count}&
offset=${offset}&
access_token=${accessToken}&
v=5.130`)
        .then(res => res.json())
        .then(json => {

            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –ø–æ—Å—Ç–æ–≤:
            let int_insCountOfThePost = 0;
            // console.log("count = " + count)
            // console.log("offset = " + offset)
            //console.log("")

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç
            json.response.items.forEach(async item => {
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ)
                console.log("")
                int_insCountOfThePost++;    // ‚Ññ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ –ø–æ—Å—Ç–∞, –Ω–∞—á–∏–Ω–∞—è —Å 1

                // –í—ã–≤–æ–¥–∏–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–µ
                //console.log("üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–µ: ", item);

                // –í—ã–≤–æ–¥–∏–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ:
                if (bool_isShowCountOfPosts == false) {
                    if (offset == 0) {
                        // –ò—â–µ–º id –ø–æ—Å—Ç–∞:
                        let idPost = 'id' in item ? item.id : '';
                        console.log("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ: " + idPost)
                        console.log("")
                        bool_isShowCountOfPosts = true;
                    } else {
                        bool_isShowCountOfPosts = true;
                    }
                }

                // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
                const postDateTime = moment.unix(item.date).format('YYYY.MM.DD HH‚Åömm');

                /*////////////////////////////////////
                //      –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –≤ –ø–æ—Å—Ç–µ      //
                ////////////////////////////////////*/


                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –ø–æ—Å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
                let attachments = 'attachments' in item ? item.attachments : [];


                if ('copy_history' in item && item.copy_history.length > 0) {
                    if ('attachments' in item.copy_history[0]) {
                        // –ï—Å–ª–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –µ—Å—Ç—å, —Ç–æ –º—ã —Å–æ–≤–º–µ—â–∞–µ–º –∏—Ö –∏—Å—Ç–æ—Ä–∏—é, –ø–æ–∑–≤–æ–ª—è—è –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ 
                        // –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∏–∑ —ç—Ç–∏—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
                        attachments = attachments.concat(item.copy_history[0].attachments);
                    }
                }

                const photos = attachments.filter(attachment => attachment.type === 'photo');

                let bool_ismultiplyPhotosInThePost = false; // = true, –µ—Å–ª–∏ –≤ –ø–æ—Å—Ç–µ > 1 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                let countImage = 1;

                if (photos.length > 1) {
                    console.log("üìö –í –ø–æ—Å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π");
                    bool_ismultiplyPhotosInThePost = true;
                }


                /*////////////////////////////////////
                //     –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ—Å—Ç–µ     //
                ////////////////////////////////////*/

                // !!! –°–¥–µ–ª–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ 120 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞ –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
                // –ï—Å–ª–∏ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è - —Ç–µ–∫—Å—Ç –æ–±—Ä–∞–∑–∞–µ—Ç—Å—è, –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Ç—Ä–æ–µ—Ç–æ—á–∏–µ, –∏ –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ .txt —Ñ–∞–π–ª

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –ø–æ—Å—Ç–µ —Ç–µ–∫—Å—Ç
                let postText = 'text' in item ? item.text : '';

                if ('copy_history' in item && item.copy_history.length > 0) {
                    if ('text' in item.copy_history[0]) {

                        // –°–æ–≤–º–µ—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–∞ –∏ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
                        if (postText != '' && (item.copy_history[0].text != '')) {
                            postText += '\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n' + item.copy_history[0].text;
                        } else if (postText == '' && (item.copy_history[0].text != '')) {
                            postText += item.copy_history[0].text;
                        }
                    }
                }

                let goodPostText = sanitizeFilename2(postText)

                if (goodPostText.length > 120) {
                    // –û–±—Ä–µ–∑–∞—é —Å—Ç—Ä–æ–∫—É –¥–æ 120 —Å–∏–º–≤–æ–ª–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è
                    goodPostText = goodPostText.substring(0, 120);
                    goodPostText += "..."

                    CreateTextFileForDescrPost();
                } else {
                    // –ü—Ä–æ–≤–µ—Ä—è—é, –Ω–µ —É–¥–∞–ª–∏–ª–∏—Å—å –ª–∏ —Å–ª—É—á–∞–π–Ω–æ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –æ–ø–∏—Å–∞–Ω–∏
                    // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏—Å—å - –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–æ–∑–¥–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ—Å—Ç–∞. –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π

                    if (goodPostText != postText) {
                        if (bool_isinfoShow) console.log("! –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π, —Å–æ—Ö—Ä–∞–Ω—è—é –∫–æ–ø–∏—é –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ")
                        if (bool_isinfoShow) console.log("")
                        if (bool_isinfoShow) console.log("goodPostText = " + goodPostText)
                        if (bool_isinfoShow) console.log("postText = " + postText)
                        if (bool_isinfoShow) console.log("")
                        CreateTextFileForDescrPost();
                    }
                }

                // C–æ–∑–¥–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ—Å—Ç–∞
                function CreateTextFileForDescrPost() {
                    if (postText != '') {

                        let fileName = '[' + postDateTime + ']';
                        let path = floberGroupName + `/${fileName}.txt`;

                        // –°–æ—Ö—Ä–∞–Ω—è—é —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤ –ø–∞–ø–∫–µ
                        fs.writeFile(path, postText, err => {
                            if (err) throw err;
                            console.log("üìÑ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º " + fileName + " —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ø–∞–ø–∫–µ " + floberGroupName);

                            // –ü–æ–ª—É—á–∞—é timestamp –∏–∑ postDateTime
                            let timestamp = moment(postDateTime, 'YYYY.MM.DD HH‚Åömm').valueOf();

                            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
                            fs.utimes(path, timestamp / 1000, timestamp / 1000, (err) => {
                                if (err) throw err;
                                if (bool_isinfoShow) console.log("‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ " + fileName +
                                    " —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ " + postDateTime);
                            });
                        });
                    }
                }



                /*////////////////////////////////////
                //              –î—Ä—É–≥–æ–µ              //
                ////////////////////////////////////*/


                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ, –∏ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞                                   
                attachments.forEach(attachment => {
                    // –í—ã–≤–æ–¥–∏–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                    let occ = '‚ö†Ô∏èüü™'
                    if (attachment.type == "photo") occ = 'üì∏';
                    if (attachment.type == "video") occ = 'üìΩÔ∏è';
                    if (attachment.type == "gif") occ = 'üïπÔ∏è';            // ? –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —ç—Ç–æ
                    let globalCountPost = offset + int_insCountOfThePost;
                    // console.log(`${occ} –ü–æ—Å—Ç ‚Ññ${int_insCountOfThePost} –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:`, attachment.type); 
                    console.log(`${occ} –ü–æ—Å—Ç ‚Ññ${globalCountPost} –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:`, attachment.type);
                });



                /*////////////////////////////////////////////////////////
                //                   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ                    //
                /////////////////////////////////////////////////////// */


                // –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                // –ë–ª–∞–≥–æ–¥–∞—Ä—è –µ–π –º—ã –∂–¥—ë–º, –ø–æ–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è, –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é
                async function downloadImage(photoUrl) {
                    return new Promise((resolve, reject) => {
                        https.get(photoUrl, response => {
                            let data = [];

                            response.on('data', chunk => {
                                data.push(chunk);
                            }).on('end', () => {
                                let buffer = Buffer.concat(data); // –°–æ–±–∏—Ä–∞–µ–º –∫—É—Å–æ—á–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –æ–¥–Ω–æ
                                resolve(buffer);
                            }).on('error', err => {
                                reject(err);
                            });
                        });
                    });
                }

                let addCount = 1;

                // –î–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –Ω–∞–±–æ—Ä–µ:
                for (let photoAttachment of photos) {
                    // –ü–æ–ª—É—á–∞–µ–º URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
                    const photo = photoAttachment.photo;
                    const photoUrl = photo.sizes[photo.sizes.length - 1].url;

                    try {
                        // –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –∫–∞—Ä—Ç–∏–Ω–∫–∏, –ø–æ —Å—Å—ã–ª–∫–∞–º, –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –∏–∑ –ø–æ—Å—Ç–∞
                        // –≠—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
                        counterWaitRequest++;
                        let buffer = await downloadImage(photoUrl);

                        //let hash = createHash(buffer);                    // –í—ã—á–∏—Å–ª—è–µ–º —Ö–µ—à –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        //console.log("hash = " + hash)

                        let fileName = '[' + postDateTime + ']';            // –ó–∞–¥–∞—é –∏–º—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

                        // –ï—Å–ª–∏ –≤ –ø–æ—Å—Ç–µ –±—ã–ª–æ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–æ —è –¥–æ–±–∞–≤–ª—è—é –µ–≥–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
                        if (goodPostText != '') {
                            fileName += ' ' + goodPostText;
                        }

                        if (bool_ismultiplyPhotosInThePost === true) {
                            // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞—é –µ–≥–æ –Ω–æ–º–µ—Ä –≤ –ø–æ—Å—Ç–µ
                            fileName += " - " + countImage;
                            countImage++;
                        }

                        do {
                            let tempFileName = fileName;
                            if (addCount > 1) {
                                tempFileName += " (" + addCount + ")";
                            }
                            tempFileName += ".jpg";
                
                            let path = floberGroupName + `/${tempFileName}`; // –ü—É—Ç—å, –∫—É–¥–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞
                
                            // –ö–∏–¥–∞—é –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç–∞–∫–æ–π —Ñ–∞–π–ª —É–∂–µ –µ—Å—Ç—å –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ
                            if (!fs.existsSync(path)) {
                                fileName = tempFileName;
                                break;
                            }
                
                            console.log("‚ö†Ô∏è –§–∞–π–ª —Å –∏–º–µ–Ω–µ–º " + tempFileName + " —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ø–∞–ø–∫–µ " + floberGroupName);
                            addCount++;
                        } while (true);
                
                        let path = floberGroupName + `/${fileName}`;
                
                        // –°–æ—Ö—Ä–∞–Ω—è—é —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫–µ 
                        fs.writeFileSync(path, buffer);
                
                        console.log("‚úÖ –§–∞–π–ª —Å –∏–º–µ–Ω–µ–º " + fileName + " —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ø–∞–ø–∫–µ " + floberGroupName);

                        // –ü–æ–ª—É—á–∞—é timestamp –∏–∑ postDateTime
                        let timestamp = moment(postDateTime, 'YYYY.MM.DD HH‚Åömm').valueOf();

                        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
                        fs.utimes(path, timestamp / 1000, timestamp / 1000, (err) => {
                            if (err) throw err;
                            if (bool_isinfoShow) console.log("‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ " + fileName +
                                " —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ " + postDateTime);
                        });

                        counterWaitRequest--;
                    } catch (err) {
                        console.error(err);
                    }
                }



                /*///////////////////////////////////////////////////////
                //                   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ GIF                    //
                ////////////////////////////////////////////////////// */

                // –î–ª—è –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–∏–π –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –Ω–∞–±–æ—Ä–µ:
                attachments.forEach(attachment => {
                    // –ï—Å–ª–∏ –≤–ª–æ–∂–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è gif –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–º:
                    if (attachment.type === 'doc' && attachment.doc.ext === 'gif') {
                        // –í—ã–≤–æ–¥–∏–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–æ–∂–µ–Ω–∏–∏
                        //console.log("üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–æ–∂–µ–Ω–∏–∏: ", attachment);

                        // –ü–æ–ª—É—á–∞–µ–º URL –≤–ª–æ–∂–µ–Ω–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
                        const attachmentItem = attachment[attachment.type];
                        const attachmentUrl = attachmentItem.sizes ? attachmentItem.sizes[attachmentItem.sizes.length - 1].url : attachmentItem.url;

                        counterWaitRequest++;

                        // –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –≤–ª–æ–∂–µ–Ω–∏—è, –ø–æ —Å—Å—ã–ª–∫–∞–º, –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –∏–∑ –ø–æ—Å—Ç–∞
                        // –≠—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
                        https.get(attachmentUrl, response => {

                            let data = [];

                            response.on('data', chunk => {
                                data.push(chunk);
                            }).on('end', () => {
                                let buffer = Buffer.concat(data);                   // –°–æ–±–∏—Ä–∞–µ–º –∫—É—Å–æ—á–∫–∏ –≤–ª–æ–∂–µ–Ω–∏—è –≤ –æ–¥–Ω–æ

                                let fileName = '[' + postDateTime + ']';            // –ó–∞–¥–∞—é –∏–º—è –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏—è

                                // –ï—Å–ª–∏ –≤ –ø–æ—Å—Ç–µ –±—ã–ª–æ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–æ —è –¥–æ–±–∞–≤–ª—è—é –µ–≥–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
                                if (goodPostText != '') {
                                    fileName += ' ' + goodPostText;
                                }

                                fileName += ".gif";

                                let path = floberGroupName + `/${fileName}`;        // –ü—É—Ç—å, –∫—É–¥–∞ –≤–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ

                                // –°–æ—Ö—Ä–∞–Ω—è—é —ç—Ç–æ –≤–ª–æ–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫–µ 
                                fs.writeFile(path, buffer, err => {
                                    if (err) throw err;
                                    console.log("üïπÔ∏è Gif —Å –∏–º–µ–Ω–µ–º " + fileName + " —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ø–∞–ø–∫–µ " + floberGroupName);

                                    // –ü–æ–ª—É—á–∞—é timestamp –∏–∑ postDateTime
                                    let timestamp = moment(postDateTime, 'YYYY.MM.DD HH‚Åömm').valueOf();

                                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
                                    fs.utimes(path, timestamp / 1000, timestamp / 1000, (err) => {
                                        if (err) throw err;
                                        if (bool_isinfoShow) console.log("‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ " + fileName +
                                            " —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ " + postDateTime);
                                    });

                                    counterWaitRequest--;
                                });
                            });
                        });
                    }
                });



                /*/////////////////////////////////////////////////////////
                //                   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ                    //
                //////////////////////////////////////////////////////// */

                // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–∏–¥–µ–æ –≤–ª–æ–∂–µ–Ω–∏—è
                const videos = attachments.filter(attachment => attachment.type === 'video');

                if (videos != '') {
                    if (goodPostText != '') {
                        // –ï—Å–ª–∏ –≤ –ø–æ—Å—Ç–µ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫ –≤–∏–¥–µ–æ, –ø–æ—Å–ª–µ –¥–∞—Ç—ã:
                        fs.appendFileSync(txtFile_allVideoLinks, '\n[' + postDateTime + '] ' + goodPostText + '\n');
                    } else {
                        fs.appendFileSync(txtFile_allVideoLinks, '\n[' + postDateTime + ']\n');
                    }
                }

                // –î–ª—è –≤—Å–µ—Ö –≤–∏–¥–µ–æ –≤–ª–æ–∂–µ–Ω–∏–π, –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –Ω–∞–±–æ—Ä–µ:
                videos.forEach(videoAttachment => {
                    // –ü–æ–ª—É—á–∞–µ–º URL –≤–∏–¥–µ–æ
                    const video = videoAttachment.video;

                    // –°–æ–±–∏—Ä–∞–µ–º URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —Å –≤–∏–¥–µ–æ
                    const videoPageUrl = `https://vk.com/video${video.owner_id}_${video.id}`;

                    console.log(videoPageUrl); // URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —Å –≤–∏–¥–µ–æ

                    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å —ç—Ç–∏–º URL –≤ .txt —Ñ–∞–π–ª
                    // –ê —Ç–∞–∫–∂–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ—Å—Ç–∞

                    let nameStr = videoPageUrl + '\n'

                    fs.appendFileSync(txtFile_allVideoLinks, nameStr);
                });



                /*//////////////////////////////////////////////////////////
                //                   –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø—Ä–æ—Å–æ–≤                    //
                ///////////////////////////////////////////////////////// */

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –ø–æ—Å—Ç–µ –æ–ø—Ä–æ—Å
                const polls = 'attachments' in item ? item.attachments.filter(attachment => attachment.type === 'poll') : [];

                if (polls.length > 0) {
                    bool_isWeGoingToPoll = true;
                    counterWaitRequest++;

                    console.log("")
                    // –ï—Å–ª–∏ –æ–ø—Ä–æ—Å –µ—Å—Ç—å, –≤—ã–≤–æ–¥–∏–º –µ–≥–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
                    console.log("üìä –û–ø—Ä–æ—Å: ", polls[0].poll.question);
                    console.log("")
                    let dOut3 = "üü£üü£üü£ –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ—à–ª–∞ –¥–æ " + (offset + count) + " –ø–æ—Å—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –æ–ø—Ä–æ—Å"
                    console.log(dOut3);
                    // let txtFile_stopThisProgramm = nameFlMainSession + '/–ù–∞ –∫–∞–∫–æ–º –ø–æ—Å—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –∏–∑ –≥—Ä—É–ø–ø—ã ' + goonGroupName + '.txt';
                    // fs.writeFileSync(txtFile_stopThisProgramm, dOut3);
                    //process.exit();

                    // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç, —Å –æ–ø—Ä–æ—Å–æ–º

                    let poolfileName = '[' + postDateTime + ']' + " –û–ø—Ä–æ—Å: " + sanitizeFilename2(polls[0].poll.question);
                    let poolPath = floberGroupName + `/${poolfileName}.txt`;

                    console.log("poolfileName = " + poolfileName + ", floberGroupName = " + floberGroupName)

                    // –°–æ—Ö—Ä–∞–Ω—è—é —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤ –ø–∞–ø–∫–µ
                    fs.writeFileSync(poolPath, polls[0].poll.question);
                    console.log("üìÑ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º " + poolfileName + " —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ø–∞–ø–∫–µ " + floberGroupName);

                    // –ü–æ–ª—É—á–∞—é timestamp –∏–∑ postDateTime
                    let timestamp = moment(postDateTime, 'YYYY.MM.DD HH‚Åömm').valueOf();

                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
                    fs.utimes(poolPath, timestamp / 1000, timestamp / 1000, (err) => {
                        if (err) throw err;
                        if (bool_isinfoShow) console.log("‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ " + poolfileName +
                            " —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ " + postDateTime);
                        counterWaitRequest--;
                    });
                }
            });
        });

    console.log("")
    console.log("üïë")
    waitForCondition();
}


let bool_isFirstStart = true; // –≠—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –∑–∞–ø—Ä–æ—Å–∞?

waitForCondition();




// –ñ–¥—ë—Ç, –ø–æ–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∞—Ç—Å—è –≤—Å–µ https –∑–∞–ø—Ä–æ—Å—ã
// –õ–∏–±–æ, —ç—Ç–æ–π-–∂–µ –ø—Ä–æ—Ü–µ–¥—É—Ä–æ–π –ø–æ—Å—ã–ª–∞–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å
async function waitForCondition() {
    while (counterWaitRequest > 0) {
        await new Promise(resolve => setTimeout(resolve, 500)); // –ñ–¥–µ–º 0.5 —Å–µ–∫—É–Ω–¥—ã

        if (counterWaitRequest > 0) {
            // console.log("counterWaitRequest > 0, –∂–¥–µ–º –µ—â–µ...");
            // console.log("counterWaitRequest = " + counterWaitRequest);
            console.log("–ï—â—ë –Ω–µ –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –Ω–∞–±–æ—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∂–¥—ë–º...")
            //console.log("")
        }
    }

    if(bool_isFirstStart == true) {
        bool_isFirstStart = false;
        MainRequest(startCount, startOffset);
    } else {
        console.log("")
        console.log("–ú—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏ –≤—Å–µ –ø–æ—Å—Ç—ã —Å " + startOffset + " –ø–æ " + (startOffset + startCount));
        if(bool_isWeGoingToPoll == false) {
            console.log("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –ø–æ—Å—Ç—ã")
            // !!! –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ü–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
    
            startOffset += startCount; // –ö–∞–∂–¥—ã–π —Ä–∞–∑ –¥–µ–ª–∞–µ–º —à–∞–≥ –Ω–∞ —Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –∑–∞–ø—Ä–æ—Å–∏–ª–∏
    
            MainRequest(startCount, startOffset); // –ò –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ
        } else {
            EndOfProgramm();
        }
    }
}


    /*////////////////////////////////////
    //       –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã       //
    ////////////////////////////////////*/


async function EndOfProgramm() {
    console.log(``)
    console.log(`üü¢üü¢üü¢ –ü—Ä–æ–≥—Ä–∞–º–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å`)
    let dOut2 = `–ú—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –Ω–∞ ` + (startOffset + startCount) + " –ø–æ—Å—Ç–µ";
    console.log(dOut2)
    console.log(``)
    
    // –°–æ—Ö—Ä–∞–Ω—è—é –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–∞–π–ª–µ —Å–µ—Å—Å–∏–∏, –Ω–∞ –∫–∞–∫–æ–º –ø–æ—Å—Ç–µ –º—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å:
    
    // –ü—É—Ç—å –∫ —ç—Ç–æ–º—É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É:
    let txtFile_stopThisProgramm = nameFlMainSession + '/–ù–∞ –∫–∞–∫–æ–º –ø–æ—Å—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –∏–∑ –≥—Ä—É–ø–ø—ã ' + goonGroupName + '.txt';
    
    await fs.writeFileSync(txtFile_stopThisProgramm, dOut2);
}
































// !!! –ó–¥–µ—Å—å —Ç–∞–∫–∂–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Ñ–∞–π–ª, —Å–∫–∞—á–∞–ª–∏ –ª–∏ –º—ã –≤—Å–µ –ø–æ—Å—Ç—ã –∏–∑ –≥—Ä—É–ø–ø—ã, –∏–ª–∏ –Ω–µ—Ç
// –ò–ª–∏ –µ—Å–ª–∏ –º—ã –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–æ—à–ª–∏ –¥–æ –æ–ø—Ä–æ—Å–∞

// –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤ —Ü–∏–∫–ª–µ –Ω–∞ —Ç–æ, –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ª–∏ –ø–æ—Å—Ç—ã –≤ –≥—Ä—É–ø–ø–µ
// –ê —Ç–∞–∫–∂–µ, –¥–æ—à–ª–∏ –ª–∏ –º—ã –¥–æ –æ–ø—Ä–æ—Å–∞


// –ü–æ—Ç–æ–º:
// ‚Ä¢ –°–¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É –ø–æ—Å—Ç–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ 20 —à—Ç—É–∫
// ‚Ä¢ –ü—Ä–æ–π—Ç–∏—Å—å –ø–æ –≤—Å–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º, –∏ —É–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É—è —Ö–µ—à —Ñ–∞–π–ª–∞)









